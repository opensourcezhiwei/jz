<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.zny.mapper.WithdrawMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.system.zny.entity.Withdraw">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="charge" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="commission" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="children" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="children_charge" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="rate" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="real_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="bank_card_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="bank_card_info" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, username, charge, commission, children, children_charge, amount, rate, 
    real_amount, `type`, `status`, remark, bank_card_id, bank_card_info, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.ruoyi.system.zny.entity.WithdrawExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from z_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from z_withdraw
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from z_withdraw
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ruoyi.system.zny.entity.WithdrawExample">
    delete from z_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ruoyi.system.zny.entity.Withdraw">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into z_withdraw (user_id, username, charge, 
      commission, children, children_charge, 
      amount, rate, real_amount, 
      `type`, `status`, remark, 
      bank_card_id, bank_card_info, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{charge,jdbcType=DECIMAL}, 
      #{commission,jdbcType=DECIMAL}, #{children,jdbcType=INTEGER}, #{childrenCharge,jdbcType=DECIMAL}, 
      #{amount,jdbcType=DECIMAL}, #{rate,jdbcType=DECIMAL}, #{realAmount,jdbcType=DECIMAL}, 
      #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{bankCardId,jdbcType=BIGINT}, #{bankCardInfo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.system.zny.entity.Withdraw">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into z_withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="charge != null">
        charge,
      </if>
      <if test="commission != null">
        commission,
      </if>
      <if test="children != null">
        children,
      </if>
      <if test="childrenCharge != null">
        children_charge,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="realAmount != null">
        real_amount,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="bankCardId != null">
        bank_card_id,
      </if>
      <if test="bankCardInfo != null">
        bank_card_info,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="charge != null">
        #{charge,jdbcType=DECIMAL},
      </if>
      <if test="commission != null">
        #{commission,jdbcType=DECIMAL},
      </if>
      <if test="children != null">
        #{children,jdbcType=INTEGER},
      </if>
      <if test="childrenCharge != null">
        #{childrenCharge,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null">
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankCardId != null">
        #{bankCardId,jdbcType=BIGINT},
      </if>
      <if test="bankCardInfo != null">
        #{bankCardInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ruoyi.system.zny.entity.WithdrawExample" resultType="java.lang.Long">
    select count(*) from z_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update z_withdraw
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.charge != null">
        charge = #{record.charge,jdbcType=DECIMAL},
      </if>
      <if test="record.commission != null">
        commission = #{record.commission,jdbcType=DECIMAL},
      </if>
      <if test="record.children != null">
        children = #{record.children,jdbcType=INTEGER},
      </if>
      <if test="record.childrenCharge != null">
        children_charge = #{record.childrenCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DECIMAL},
      </if>
      <if test="record.realAmount != null">
        real_amount = #{record.realAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardId != null">
        bank_card_id = #{record.bankCardId,jdbcType=BIGINT},
      </if>
      <if test="record.bankCardInfo != null">
        bank_card_info = #{record.bankCardInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update z_withdraw
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      charge = #{record.charge,jdbcType=DECIMAL},
      commission = #{record.commission,jdbcType=DECIMAL},
      children = #{record.children,jdbcType=INTEGER},
      children_charge = #{record.childrenCharge,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      rate = #{record.rate,jdbcType=DECIMAL},
      real_amount = #{record.realAmount,jdbcType=DECIMAL},
      `type` = #{record.type,jdbcType=TINYINT},
      `status` = #{record.status,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      bank_card_id = #{record.bankCardId,jdbcType=BIGINT},
      bank_card_info = #{record.bankCardInfo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.system.zny.entity.Withdraw">
    update z_withdraw
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="charge != null">
        charge = #{charge,jdbcType=DECIMAL},
      </if>
      <if test="commission != null">
        commission = #{commission,jdbcType=DECIMAL},
      </if>
      <if test="children != null">
        children = #{children,jdbcType=INTEGER},
      </if>
      <if test="childrenCharge != null">
        children_charge = #{childrenCharge,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null">
        real_amount = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankCardId != null">
        bank_card_id = #{bankCardId,jdbcType=BIGINT},
      </if>
      <if test="bankCardInfo != null">
        bank_card_info = #{bankCardInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.system.zny.entity.Withdraw">
    update z_withdraw
    set user_id = #{userId,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      charge = #{charge,jdbcType=DECIMAL},
      commission = #{commission,jdbcType=DECIMAL},
      children = #{children,jdbcType=INTEGER},
      children_charge = #{childrenCharge,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      rate = #{rate,jdbcType=DECIMAL},
      real_amount = #{realAmount,jdbcType=DECIMAL},
      `type` = #{type,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      bank_card_id = #{bankCardId,jdbcType=BIGINT},
      bank_card_info = #{bankCardInfo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>