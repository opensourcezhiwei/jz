<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.zny.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.system.zny.entity.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="tel" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="realname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="cert_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="cert_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="top_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="share_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="parent_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="parent2_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="parent3_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="children" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="product_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="sign_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="sign_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="login_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="point" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="product_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="promise_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="buy_charge" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="charge" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="withdraw" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="total_child_charge" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="profit" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="register_ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="login_ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="register_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="head_icon" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="id_card_zheng" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="id_card_fan" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="id_card" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="risk_level" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sex" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="login_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="login_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="trade_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="home" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="work" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="bank_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="vip" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, tel, realname, cert_date, cert_num, top_id, share_id, parent_id, parent2_id, 
    parent3_id, children, money, product_money, sign_money, sign_time, login_time, point, 
    product_count, promise_money, buy_charge, charge, withdraw, total_child_charge, profit, 
    register_ip, login_ip, `status`, register_time, head_icon, id_card_zheng, id_card_fan, 
    id_card, risk_level, age, sex, login_count, login_password, trade_password, home, 
    email, `work`, bank_id, vip
  </sql>
  <select id="selectByExample" parameterType="com.ruoyi.system.zny.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from z_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from z_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from z_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ruoyi.system.zny.entity.UserExample">
    delete from z_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ruoyi.system.zny.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into z_user (username, tel, realname, 
      cert_date, cert_num, top_id, 
      share_id, parent_id, parent2_id, 
      parent3_id, children, money, 
      product_money, sign_money, sign_time, 
      login_time, point, product_count, 
      promise_money, buy_charge, charge, 
      withdraw, total_child_charge, profit, 
      register_ip, login_ip, `status`, 
      register_time, head_icon, id_card_zheng, 
      id_card_fan, id_card, risk_level, 
      age, sex, login_count, 
      login_password, trade_password, home, 
      email, `work`, bank_id, 
      vip)
    values (#{username,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{certDate,jdbcType=DATE}, #{certNum,jdbcType=VARCHAR}, #{topId,jdbcType=BIGINT}, 
      #{shareId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{parent2Id,jdbcType=BIGINT}, 
      #{parent3Id,jdbcType=BIGINT}, #{children,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, 
      #{productMoney,jdbcType=DECIMAL}, #{signMoney,jdbcType=DECIMAL}, #{signTime,jdbcType=TIMESTAMP}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{point,jdbcType=INTEGER}, #{productCount,jdbcType=INTEGER}, 
      #{promiseMoney,jdbcType=DECIMAL}, #{buyCharge,jdbcType=DECIMAL}, #{charge,jdbcType=DECIMAL}, 
      #{withdraw,jdbcType=DECIMAL}, #{totalChildCharge,jdbcType=DECIMAL}, #{profit,jdbcType=DECIMAL}, 
      #{registerIp,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{headIcon,jdbcType=VARCHAR}, #{idCardZheng,jdbcType=VARCHAR}, 
      #{idCardFan,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{riskLevel,jdbcType=TINYINT}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=TINYINT}, #{loginCount,jdbcType=INTEGER}, 
      #{loginPassword,jdbcType=VARCHAR}, #{tradePassword,jdbcType=VARCHAR}, #{home,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{work,jdbcType=VARCHAR}, #{bankId,jdbcType=BIGINT}, 
      #{vip,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.system.zny.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into z_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="certDate != null">
        cert_date,
      </if>
      <if test="certNum != null">
        cert_num,
      </if>
      <if test="topId != null">
        top_id,
      </if>
      <if test="shareId != null">
        share_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="parent2Id != null">
        parent2_id,
      </if>
      <if test="parent3Id != null">
        parent3_id,
      </if>
      <if test="children != null">
        children,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="productMoney != null">
        product_money,
      </if>
      <if test="signMoney != null">
        sign_money,
      </if>
      <if test="signTime != null">
        sign_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="productCount != null">
        product_count,
      </if>
      <if test="promiseMoney != null">
        promise_money,
      </if>
      <if test="buyCharge != null">
        buy_charge,
      </if>
      <if test="charge != null">
        charge,
      </if>
      <if test="withdraw != null">
        withdraw,
      </if>
      <if test="totalChildCharge != null">
        total_child_charge,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="headIcon != null">
        head_icon,
      </if>
      <if test="idCardZheng != null">
        id_card_zheng,
      </if>
      <if test="idCardFan != null">
        id_card_fan,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="riskLevel != null">
        risk_level,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="loginCount != null">
        login_count,
      </if>
      <if test="loginPassword != null">
        login_password,
      </if>
      <if test="tradePassword != null">
        trade_password,
      </if>
      <if test="home != null">
        home,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="work != null">
        `work`,
      </if>
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="vip != null">
        vip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="certDate != null">
        #{certDate,jdbcType=DATE},
      </if>
      <if test="certNum != null">
        #{certNum,jdbcType=VARCHAR},
      </if>
      <if test="topId != null">
        #{topId,jdbcType=BIGINT},
      </if>
      <if test="shareId != null">
        #{shareId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parent2Id != null">
        #{parent2Id,jdbcType=BIGINT},
      </if>
      <if test="parent3Id != null">
        #{parent3Id,jdbcType=BIGINT},
      </if>
      <if test="children != null">
        #{children,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="productMoney != null">
        #{productMoney,jdbcType=DECIMAL},
      </if>
      <if test="signMoney != null">
        #{signMoney,jdbcType=DECIMAL},
      </if>
      <if test="signTime != null">
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="point != null">
        #{point,jdbcType=INTEGER},
      </if>
      <if test="productCount != null">
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="promiseMoney != null">
        #{promiseMoney,jdbcType=DECIMAL},
      </if>
      <if test="buyCharge != null">
        #{buyCharge,jdbcType=DECIMAL},
      </if>
      <if test="charge != null">
        #{charge,jdbcType=DECIMAL},
      </if>
      <if test="withdraw != null">
        #{withdraw,jdbcType=DECIMAL},
      </if>
      <if test="totalChildCharge != null">
        #{totalChildCharge,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headIcon != null">
        #{headIcon,jdbcType=VARCHAR},
      </if>
      <if test="idCardZheng != null">
        #{idCardZheng,jdbcType=VARCHAR},
      </if>
      <if test="idCardFan != null">
        #{idCardFan,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="riskLevel != null">
        #{riskLevel,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="tradePassword != null">
        #{tradePassword,jdbcType=VARCHAR},
      </if>
      <if test="home != null">
        #{home,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="work != null">
        #{work,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=BIGINT},
      </if>
      <if test="vip != null">
        #{vip,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ruoyi.system.zny.entity.UserExample" resultType="java.lang.Long">
    select count(*) from z_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update z_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.certDate != null">
        cert_date = #{record.certDate,jdbcType=DATE},
      </if>
      <if test="record.certNum != null">
        cert_num = #{record.certNum,jdbcType=VARCHAR},
      </if>
      <if test="record.topId != null">
        top_id = #{record.topId,jdbcType=BIGINT},
      </if>
      <if test="record.shareId != null">
        share_id = #{record.shareId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.parent2Id != null">
        parent2_id = #{record.parent2Id,jdbcType=BIGINT},
      </if>
      <if test="record.parent3Id != null">
        parent3_id = #{record.parent3Id,jdbcType=BIGINT},
      </if>
      <if test="record.children != null">
        children = #{record.children,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.productMoney != null">
        product_money = #{record.productMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.signMoney != null">
        sign_money = #{record.signMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.signTime != null">
        sign_time = #{record.signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.productCount != null">
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.promiseMoney != null">
        promise_money = #{record.promiseMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.buyCharge != null">
        buy_charge = #{record.buyCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.charge != null">
        charge = #{record.charge,jdbcType=DECIMAL},
      </if>
      <if test="record.withdraw != null">
        withdraw = #{record.withdraw,jdbcType=DECIMAL},
      </if>
      <if test="record.totalChildCharge != null">
        total_child_charge = #{record.totalChildCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.profit != null">
        profit = #{record.profit,jdbcType=DECIMAL},
      </if>
      <if test="record.registerIp != null">
        register_ip = #{record.registerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.headIcon != null">
        head_icon = #{record.headIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardZheng != null">
        id_card_zheng = #{record.idCardZheng,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardFan != null">
        id_card_fan = #{record.idCardFan,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.riskLevel != null">
        risk_level = #{record.riskLevel,jdbcType=TINYINT},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.loginCount != null">
        login_count = #{record.loginCount,jdbcType=INTEGER},
      </if>
      <if test="record.loginPassword != null">
        login_password = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.tradePassword != null">
        trade_password = #{record.tradePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.home != null">
        home = #{record.home,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.work != null">
        `work` = #{record.work,jdbcType=VARCHAR},
      </if>
      <if test="record.bankId != null">
        bank_id = #{record.bankId,jdbcType=BIGINT},
      </if>
      <if test="record.vip != null">
        vip = #{record.vip,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update z_user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      cert_date = #{record.certDate,jdbcType=DATE},
      cert_num = #{record.certNum,jdbcType=VARCHAR},
      top_id = #{record.topId,jdbcType=BIGINT},
      share_id = #{record.shareId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      parent2_id = #{record.parent2Id,jdbcType=BIGINT},
      parent3_id = #{record.parent3Id,jdbcType=BIGINT},
      children = #{record.children,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      product_money = #{record.productMoney,jdbcType=DECIMAL},
      sign_money = #{record.signMoney,jdbcType=DECIMAL},
      sign_time = #{record.signTime,jdbcType=TIMESTAMP},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      point = #{record.point,jdbcType=INTEGER},
      product_count = #{record.productCount,jdbcType=INTEGER},
      promise_money = #{record.promiseMoney,jdbcType=DECIMAL},
      buy_charge = #{record.buyCharge,jdbcType=DECIMAL},
      charge = #{record.charge,jdbcType=DECIMAL},
      withdraw = #{record.withdraw,jdbcType=DECIMAL},
      total_child_charge = #{record.totalChildCharge,jdbcType=DECIMAL},
      profit = #{record.profit,jdbcType=DECIMAL},
      register_ip = #{record.registerIp,jdbcType=VARCHAR},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      head_icon = #{record.headIcon,jdbcType=VARCHAR},
      id_card_zheng = #{record.idCardZheng,jdbcType=VARCHAR},
      id_card_fan = #{record.idCardFan,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      risk_level = #{record.riskLevel,jdbcType=TINYINT},
      age = #{record.age,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=TINYINT},
      login_count = #{record.loginCount,jdbcType=INTEGER},
      login_password = #{record.loginPassword,jdbcType=VARCHAR},
      trade_password = #{record.tradePassword,jdbcType=VARCHAR},
      home = #{record.home,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      `work` = #{record.work,jdbcType=VARCHAR},
      bank_id = #{record.bankId,jdbcType=BIGINT},
      vip = #{record.vip,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.system.zny.entity.User">
    update z_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="certDate != null">
        cert_date = #{certDate,jdbcType=DATE},
      </if>
      <if test="certNum != null">
        cert_num = #{certNum,jdbcType=VARCHAR},
      </if>
      <if test="topId != null">
        top_id = #{topId,jdbcType=BIGINT},
      </if>
      <if test="shareId != null">
        share_id = #{shareId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parent2Id != null">
        parent2_id = #{parent2Id,jdbcType=BIGINT},
      </if>
      <if test="parent3Id != null">
        parent3_id = #{parent3Id,jdbcType=BIGINT},
      </if>
      <if test="children != null">
        children = #{children,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="productMoney != null">
        product_money = #{productMoney,jdbcType=DECIMAL},
      </if>
      <if test="signMoney != null">
        sign_money = #{signMoney,jdbcType=DECIMAL},
      </if>
      <if test="signTime != null">
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="productCount != null">
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="promiseMoney != null">
        promise_money = #{promiseMoney,jdbcType=DECIMAL},
      </if>
      <if test="buyCharge != null">
        buy_charge = #{buyCharge,jdbcType=DECIMAL},
      </if>
      <if test="charge != null">
        charge = #{charge,jdbcType=DECIMAL},
      </if>
      <if test="withdraw != null">
        withdraw = #{withdraw,jdbcType=DECIMAL},
      </if>
      <if test="totalChildCharge != null">
        total_child_charge = #{totalChildCharge,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headIcon != null">
        head_icon = #{headIcon,jdbcType=VARCHAR},
      </if>
      <if test="idCardZheng != null">
        id_card_zheng = #{idCardZheng,jdbcType=VARCHAR},
      </if>
      <if test="idCardFan != null">
        id_card_fan = #{idCardFan,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="riskLevel != null">
        risk_level = #{riskLevel,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="loginCount != null">
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginPassword != null">
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="tradePassword != null">
        trade_password = #{tradePassword,jdbcType=VARCHAR},
      </if>
      <if test="home != null">
        home = #{home,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="work != null">
        `work` = #{work,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=BIGINT},
      </if>
      <if test="vip != null">
        vip = #{vip,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.system.zny.entity.User">
    update z_user
    set username = #{username,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      cert_date = #{certDate,jdbcType=DATE},
      cert_num = #{certNum,jdbcType=VARCHAR},
      top_id = #{topId,jdbcType=BIGINT},
      share_id = #{shareId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      parent2_id = #{parent2Id,jdbcType=BIGINT},
      parent3_id = #{parent3Id,jdbcType=BIGINT},
      children = #{children,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      product_money = #{productMoney,jdbcType=DECIMAL},
      sign_money = #{signMoney,jdbcType=DECIMAL},
      sign_time = #{signTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      point = #{point,jdbcType=INTEGER},
      product_count = #{productCount,jdbcType=INTEGER},
      promise_money = #{promiseMoney,jdbcType=DECIMAL},
      buy_charge = #{buyCharge,jdbcType=DECIMAL},
      charge = #{charge,jdbcType=DECIMAL},
      withdraw = #{withdraw,jdbcType=DECIMAL},
      total_child_charge = #{totalChildCharge,jdbcType=DECIMAL},
      profit = #{profit,jdbcType=DECIMAL},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      head_icon = #{headIcon,jdbcType=VARCHAR},
      id_card_zheng = #{idCardZheng,jdbcType=VARCHAR},
      id_card_fan = #{idCardFan,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      risk_level = #{riskLevel,jdbcType=TINYINT},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=TINYINT},
      login_count = #{loginCount,jdbcType=INTEGER},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      trade_password = #{tradePassword,jdbcType=VARCHAR},
      home = #{home,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      `work` = #{work,jdbcType=VARCHAR},
      bank_id = #{bankId,jdbcType=BIGINT},
      vip = #{vip,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>